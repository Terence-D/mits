services:
  app:
    image: redpanda464/mits
    volumes:
      - /mnt/docker/mit/images:/python_app/static/images
      - /mnt/movies:/movies
      - /mnt/tv:/series
    depends_on:
      - redis
    working_dir: /python_app
    ports:
      - "${APP_PORT}:${APP_PORT}"  # Map container port to host port
    command: gunicorn --config gunicorn_config.py main:app
    restart: unless-stopped
    env_file:
      stack.env
  redis: #this must match REDIS_SERVER_NAME
    image: redis:alpine
    ports:
      - "${REDIS_PORT}:${REDIS_PORT}"   
    volumes:
      - /mnt/docker/mit/redis-data:/data  # Mount a named volume for persisting data  
    environment:
      REDIS_ARGS: --save 600 1
    working_dir: /data
    restart: unless-stopped

volumes:
  # Additional volumes for shared data
  redis-data:  # Define a named volume for persistence
